= simple_form_for @config, url: config_index_path, method: :post do |f|
  = f.input :city_id, label: 'City ID', hint: 'City ID on Gamma', required: true
  = f.input :city_name, hint: 'Time zone string on gamma', placeholder: 'e.g. Asia/Kuala_Lumpur', required: true
  = f.input :location_id, label: 'Location ID', as: :integer, required: true,
          placeholder: "Can be any unique positive integer, as long as it's unique among all the locations", hint: 'check existing location ids in google spreadsheet'
  = f.input :location_name, required: true, placeholder: 'e.g. KLIA', hint: 'Your custom location name'
  = f.input :vehicle_type_names, label: 'Vehicle type and names', required: true,
          input_html: { value: display_value_for(:vehicle_type_names) },
          placeholder: 'e.g. "302": "JustGrab - Airport", "400": "Taxi - Airport"',
          hint: 'Comma separated pairs with taxi type ID and taxi type name. The name will be used in the notifications.'
  = f.input :pickup_area_geo, required: true,
          input_html: { value: display_value_for(:pickup_area_geo) },
          hint: 'Comma separated geohash strings, recommended to be geohash level 6 or level 7',
          placeholder: 'e.g. w22r96, w22r97'
  = f.input :bay_area_geo, required: true,
          input_html: {value: display_value_for(:bay_area_geo) },
          hint: 'Comma separated geohash strings, recommended to be geohash level 6 or level 7',
          placeholder: 'e.g. w22r61, w22r63'

  .badge.badge-light Notification Frequency
  br
  br

  = f.input :queue_position_multiple,
          placeholder: 'Leave blank to use the default value: 5',
          hint: 'We will send a notification to driver after he has moved X positions in the queue. You may consider increasing this value for large queues.'

  = f.input :queue_position_dynamic_multiple,
          input_html: { value: display_value_for(:queue_position_dynamic_multiple) },
          placeholder: "e.g. \"200\": 50, \"500\": 100\n(Leave blank to disable the feature, recommend to set this for very large queues).",
          hint: "(Optional) Comma separated pairs with the value of queue position and the key of the length of the range.\
          This defines the frequency of the notifications based on current queue position of drivers. e.g. \"500\": 100 means when the\
          queue position of driver is greater than 500, we will send a update message to the driver when his queue position number has change\
          by 100."

  = f.input :ignore_quota,
          placeholder: 'Leave blank to use the default value: 2',
          hint: 'Number of ignores by driver to move driver back to the end of queue position'
  = f.input :cancel_quota,
          placeholder: 'Leave blank to use the default value: 0',
          hint: 'Number of cancels by driver to move driver back to the end of queue position'
  = f.input :mercy_period_in_sec,
          placeholder: 'Leave blank to use the default value: 300',
          hint: 'Number of seconds after the driver turn off app or moved out of the bay area to be moved to the end of queue position'
  = f.input :pax_cancel_record_ttl_in_sec,
          placeholder: 'Leave blank to use the default value: 900',
          hint: 'Number of seconds for dax to come back to bay area after pax cancels'
  = f.input :remind_snooze_time_in_sec,
          placeholder: 'Leave blank to use the default value: 60',
          hint: 'If value is 180, when driver turn off app or moved out of bay area, driver will get the "Out Of Queue Remind Message" every 3 mins after receiving the first "Out of Queue Remind Message"'
  = f.input :remind_before_in_sec,
          placeholder: 'Leave blank to use the default value: 180',
          hint: 'The time we send the 1st "Out of Queue Remind Message". If value is 300, we will send this 5 mins before "mercy period in sec" ends.'

  = f.hidden_field :uid

  .badge.badge-light SMS Notification Content
  br
  br

  = f.input :welcome_message, required: true, placeholder: 'e.g. [GRAB] Welcome to KLIA. Your queue number for:', hint: 'This message will be combined with "Range template with eta"'
  = f.input :welcome_back_message, required: true, label: 'Welcome With Pax Cancel Message',
          hint: 'This message will be combined with "Range template with eta". Dax will receive this upon reaching the bay area after pax cancels.',
          placeholder: 'e.g. [GRAB] Because passenger has cancelled, you are back in queue. Your queue number for:'
  = f.input :update_message, required: true, placeholder: 'e.g. [GRAB] Your queue number at KLIA is:',
          hint: 'This message will be combined with "Range template". Dax will receive this when their queue position moved by X.'
  = f.input :alert_message, required: true, placeholder: 'e.g. [GRAB] Your queue number at KLIA has changed to: ',
          hint: 'This message will be combined with "Range template". Dax will receive this when being sent back to the end of queue position'
  = f.input :out_of_queue_message, required: true,
          placeholder: 'e.g. [GRAB] You are out of the KLIA Queue. You can rejoin by coming back to the queue area or turn on your app.',
          hint: 'Dax will receive this when dax is no longer in the queue'
  = f.input :out_of_queue_remind_message, required: true,
          placeholder: 'e.g. [GRAB] You are currently not in the queue. Please return to the queue area or turn on your app to maintain your queue position',
          hint: 'Dax will receive this according to the "remind_before_in_sec" and "remind_snooze_time_in_sec" values"'
  = f.input :range_template, required: true, placeholder: 'e.g. %d-%d',
          hint: 'Vehicle name will be automatically included in this. Use %d as a variable for queue position. Message would look like this "GrabCar: 1-5".'
  = f.input :rank_template,
          placeholder: 'Leave blank to use the default value: %s:%s ',
          hint: 'With default value, Message would look like this "GrabCar:1-5". First %s was replaced with GrabCan and second is 1-5'
  = f.input :range_template_with_eta, required: true,
          placeholder: 'e.g. %d-%d (ETA: %d min)',
          hint: 'Vehicle name will be automatically included in this. Use %d as a variable for queue position and ETA. Message would look like this "GrabCar: 1-5 (ETA: 20 min)."'

  = f.input :readmore_link, placeholder: 'e.g. bit.ly/svbqueue'

  .badge.badge-light InboxAndPush Notification Content
  br
  br

  = f.input :inbox_and_push_welcome_message_title, required: true, placeholder: 'e.g. [GRAB] Welcome to KLIA.'
  = f.input :inbox_and_push_welcome_message_subtitle
  = f.input :inbox_and_push_welcome_message_category
  = f.input :inbox_and_push_welcome_message_content, required: true, placeholder: 'e.g. Your queue number for:', hint: 'This message will be combined with "Range template with eta"'
  = f.input :inbox_and_push_welcome_message_button_text
  = f.input :inbox_and_push_welcome_message_button_link

  = f.input :inbox_and_push_welcome_back_message_title, required: true, label: 'Inbox and push welcome with pax cancel message Title', placeholder: 'e.g. [GRAB] Because passenger has cancelled, you are back in queue.'
  = f.input :inbox_and_push_welcome_back_message_subtitle, label: 'Inbox and push welcome with pax cancel message subtitle'
  = f.input :inbox_and_push_welcome_back_message_category, label: 'Inbox and push welcome with pax cancel message category'
  = f.input :inbox_and_push_welcome_back_message_content, required: true, label: 'Inbox and push welcome with pax cancel message content', placeholder: 'e.g. Your queue number for:', hint: 'This message will be combined with "Range template with eta". Dax will receive this upon reaching the bay area after pax cancels.'
  = f.input :inbox_and_push_welcome_back_message_button_text, label: 'Inbox and push welcome with pax cancel message button text'
  = f.input :inbox_and_push_welcome_back_message_button_link, label: 'Inbox and push welcome with pax cancel message button link'

  = f.input :inbox_and_push_update_message_title, required: true, placeholder: 'e.g. [GRAB] Queue Update.'
  = f.input :inbox_and_push_update_message_subtitle
  = f.input :inbox_and_push_update_message_category
  = f.input :inbox_and_push_update_message_content, required: true, placeholder: 'e.g. Your queue number for:', hint: 'This message will be combined with "Range template". Dax will receive this when their queue position moved by X.'
  = f.input :inbox_and_push_update_message_button_text
  = f.input :inbox_and_push_update_message_button_link

  = f.input :inbox_and_push_alert_message_title, required: true, placeholder: 'e.g. [GRAB] Queue Number changed.'
  = f.input :inbox_and_push_alert_message_subtitle
  = f.input :inbox_and_push_alert_message_category
  = f.input :inbox_and_push_alert_message_content, required: true, placeholder: 'e.g. [GRAB] Your queue number at KLIA has changed to: ', hint: 'This message will be combined with "Range template". Dax will receive this when being sent back to the end of queue position'
  = f.input :inbox_and_push_alert_message_button_text
  = f.input :inbox_and_push_alert_message_button_link

  = f.input :inbox_and_push_out_of_queue_message_title, required: true, placeholder: 'e.g. [GRAB] You are currently not in the queue.'
  = f.input :inbox_and_push_out_of_queue_message_subtitle
  = f.input :inbox_and_push_out_of_queue_message_category
  = f.input :inbox_and_push_out_of_queue_message_content, required: true, placeholder: 'e.g. You can rejoin by coming back to the queue area or turn on your app.',
          hint: 'Dax will receive this when dax is no longer in the queue'
  = f.input :inbox_and_push_out_of_queue_message_button_text
  = f.input :inbox_and_push_out_of_queue_message_button_link

  = f.input :inbox_and_push_out_of_queue_remind_message_title, required: true, placeholder: 'e.g. [GRAB] You are currently not in the queue.'
  = f.input :inbox_and_push_out_of_queue_remind_message_subtitle
  = f.input :inbox_and_push_out_of_queue_remind_message_category
  = f.input :inbox_and_push_out_of_queue_remind_message_content, required: true, placeholder: 'e.g. Please return to the queue area or turn on your app to maintain your queue position',
          hint: 'Dax will receive this according to the "remind_before_in_sec" and "remind_snooze_time_in_sec" values"'
  = f.input :inbox_and_push_out_of_queue_remind_message_button_text
  = f.input :inbox_and_push_out_of_queue_remind_message_button_link

  = f.input :inbox_and_push_ttl_in_minute, required: true, placeholder: 'e.g. 1',
          hint: 'How many minutes this message will be stayed in inbox. Default will be 1 mintue'

  = f.input :inbox_and_push_range_template, required: true, placeholder: 'e.g. %d-%d',
          hint: 'Vehicle name will be automatically included in this. Use %d as a variable for queue position. Message would look like this "GrabCar: 1-5".'

  = f.input :inbox_and_push_range_template_with_eta, required: true,
          placeholder: 'e.g. %d-%d (ETA: %d min)',
          hint: 'Vehicle name will be automatically included in this. Use %d as a variable for queue position and ETA. Message would look like this "GrabCar: 1-5 (ETA: 20 min)."'

  = f.input :inbox_and_push_readmore_link, placeholder: 'e.g. bit.ly/svbqueue'

  = f.button :submit, 'Generate', class: 'btn-success'

